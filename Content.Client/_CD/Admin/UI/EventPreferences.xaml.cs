using Content.Shared.Preferences;
using Content.Shared.Roles;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client._CD.Admin.UI;

[GenerateTypedNameReferences]
public sealed partial class EventPreferences : Control
{
    [Dependency] private readonly IPrototypeManager _proto = default!;

    public EventPreferences()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
    }

    /// <summary>
    /// Fills the BoxContainer with all the AntagPrototypes that we want to show, and colours them based on whether
    /// the passed in preference profile has these preferences set to yes or no.
    /// </summary>
    /// <param name="userPreferences">The profile of preferences that we want to check for.</param>
    /// <param name="listablePreferences">The preferences that we want to list and compare with userPreferences.</param>
    public void SetPreferenceList(HumanoidCharacterProfile userPreferences, IEnumerable<ProtoId<AntagPrototype>> listablePreferences)
    {
        // representing whether a player has a preference with red and green colors
        foreach (var listablePreference in listablePreferences)
        {
            var label = new Label();

            if (!userPreferences.AntagPreferences.Contains(listablePreference))
                continue;

            if(!_proto.TryIndex(listablePreference, out var listablePreferencePrototype))
                continue;

            label.Text = Loc.GetString(listablePreferencePrototype.Name);
            label.Modulate = Color.Green;
            label.HorizontalAlignment = HAlignment.Center;

            EventPrefContainer.AddChild(label);
        }
    }
}
