using Content.Client.UserInterface.Controls;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._CD.Silicons.StationAi;

[GenerateTypedNameReferences]
public sealed partial class AiShellSelectionMenu : FancyWindow
{
    public Action? JumpToShell;
    public Action? EnterShell;

    [Dependency] private readonly IEntityManager _ent = default!;

    private EntityQuery<MetaDataComponent> _metadataQuery;

    public AiShellSelectionMenu()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        _metadataQuery = _ent.GetEntityQuery<MetaDataComponent>();
    }

    public void Populate(List<EntityUid> compControllableShells)
    {
        var group = new ButtonGroup();
        ShellsList.RemoveAllChildren();

        foreach (var shell in compControllableShells)
        {
            var button = new Button();

            // Button styling
            button.HorizontalExpand = true;
            button.ClipText = false;

            // Button contents
            button.Text = _metadataQuery.GetComponent(shell).EntityName;
            button.Group = group;

            ShellsList.AddChild(button);
        }

    }
}

